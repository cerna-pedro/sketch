{"mappings":"kBACMA,EAAgBC,SAASC,cAAc,mBAEvCC,GADUF,SAASC,cAAc,aACnBD,SAASC,cAAc,WACrCE,EAAgBH,SAASC,cAAc,mBACvCG,EAAaJ,SAASC,cAAc,gBACpCI,EAAQL,SAASC,cAAc,UAC/BK,EAAcN,SAASC,cAAc,iBAQrCM,EAAiB,KACrBF,EAAMG,UAAUC,OAAO,UACvBN,EAAcK,UAAUC,OAAO,UAC/BC,YAAW,KACTJ,EAAYK,UACX,KAGCC,EAAgB,KACpBP,EAAMG,UAAUK,IAAI,UACpBV,EAAcK,UAAUK,IAAI,WAmBxBC,EAAaC,IACbA,EAAEC,SAAWX,GAAmB,WAAVU,EAAEE,KAC1BL,KAIEM,EAAeH,OACdA,EAAEC,OAAOG,MAAMC,oBAMlBC,cAAgBC,iBAAiBP,EAAEC,QAAQO,iBACzC,oBAEFC,MAAAA,+DAAuEC,KACrEJ,gBAEGG,MAAM,gBAGLE,EAAIC,WAAWH,MAAM,GAAGI,QAAQ,KAAM,KAAO,GACnDb,EAAEC,OAAOG,MAAMC,gBAAAA,QAA0BI,MAAM,MAAMA,MAAM,MAAMA,MAAM,MAAME,SAhB3DN,OACZS,EAAYC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC5BC,EAAcH,KAAKC,MAAsB,IAAhBD,KAAKE,UAC9BE,EAAaJ,KAAKC,MAAsB,IAAhBD,KAAKE,UACnCjB,EAAEC,OAAOG,MAAMC,gBAAAA,QAA0BS,KAAaI,KAAeC,UAenEC,EAAaC,MAAOC,EAAM,UACvBtC,EAAcuC,YACnBvC,EAAcwC,YAAYxC,EAAcuC,gBAEtCE,EAAI,OACDA,EAAIH,GAAAA,OACHI,EAAUzC,SAAS0C,cAAc,OACvCD,EAAQjC,UAAUK,IAAI,oBACb8B,EAAI,EAAGA,EAAIN,EAAKM,IAAAA,OACjBC,EAAM5C,SAAS0C,cAAc,OACnCE,EAAIpC,UAAUK,IAAI,QAClB4B,EAAQI,OAAOD,GACf7C,EAAc8C,OAAOJ,SACfK,IAER/C,EAAc8C,OAAOJ,GACrBD,IAEYxC,SAAS+C,iBAAiB,SAClCC,SAASC,IACbA,EAAKC,iBAAiB,cAAehC,OAMzCd,EAAW8C,iBAAiB,UAAWnC,IACrCA,EAAEoC,uBACIC,EAAkBC,SAAStC,EAAEC,OAAO,GAAGsC,OAC7C1C,IACAuB,EAAWiB,MAEblD,EAAYgD,iBAAiB,eA5FVnC,IACjBR,IACAD,EAAYgD,MAAQ,MA2FtBhD,EAAY4C,iBAAiB,WAlENnC,IACJ,2BACHwC,SAASxC,EAAEE,MACvBF,EAAEoC,oBAgEN7C,EAAY4C,iBAAiB,UA5EJ,KACnB5C,EAAYgD,MAAQ,KACtBhD,EAAYgD,MAAQ,IAElBhD,EAAYgD,MAAQ,IACtBhD,EAAYgD,MAAQ,MAwExBjD,EAAM6C,iBAAiB,cAAepC,GACtCT,EAAM6C,iBAAiB,UAAWpC,SAG5BgC,EAAO,CAACU,EAAS,IAAA,IACjBC,SAASC,GAAYhD,WAAWgD,EAASF,KAG/CrB","sources":["./index.js"],"sourcesContent":["// Query Selectors\r\nconst gridContainer = document.querySelector('.grid-container');\r\nconst gridRow = document.querySelector('.grid-row');\r\nconst clearButton = document.querySelector('#clear');\r\nconst formContainer = document.querySelector('.form-container');\r\nconst squareForm = document.querySelector('#square-form');\r\nconst popup = document.querySelector('.popup');\r\nconst numberInput = document.querySelector('#number-input');\r\n\r\n// Functions\r\nconst clearGrid = (e) => {\r\n  toggleClassOff();\r\n  numberInput.value = '';\r\n};\r\n\r\nconst toggleClassOff = () => {\r\n  popup.classList.remove('hidden');\r\n  formContainer.classList.remove('hidden');\r\n  setTimeout(() => {\r\n    numberInput.focus();\r\n  }, 20);\r\n};\r\n\r\nconst toggleClassOn = () => {\r\n  popup.classList.add('hidden');\r\n  formContainer.classList.add('hidden');\r\n};\r\n\r\nconst checkNumberRange = () => {\r\n  if (numberInput.value > 30) {\r\n    numberInput.value = 30;\r\n  }\r\n  if (numberInput.value < 2) {\r\n    numberInput.value = 2;\r\n  }\r\n};\r\n\r\nconst validateEntry = (e) => {\r\n  const possible = '0123456789BackspaceEnter';\r\n  if (!possible.includes(e.key)) {\r\n    e.preventDefault();\r\n  }\r\n};\r\n\r\nconst exitPopup = (e) => {\r\n  if (e.target === popup || e.key === 'Escape') {\r\n    toggleClassOn();\r\n  }\r\n};\r\n\r\nconst changeColor = (e) => {\r\n  if (!e.target.style.backgroundColor) {\r\n    const randomRed = Math.round(Math.random() * 255);\r\n    const randomGreen = Math.round(Math.random() * 255);\r\n    const randomBlue = Math.round(Math.random() * 255);\r\n    e.target.style.backgroundColor = `rgba(${randomRed},${randomGreen},${randomBlue},.3)`;\r\n  } else {\r\n    current_color = getComputedStyle(e.target).getPropertyValue(\r\n      'background-color'\r\n    );\r\n    match = /rgba?\\((\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*\\d+[\\.\\d+]*)*\\)/g.exec(\r\n      current_color\r\n    );\r\n    if (!match[4]) {\r\n      return;\r\n    }\r\n    const a = parseFloat(match[4].replace(', ', '')) + 0.1;\r\n    e.target.style.backgroundColor = `rgba(${match[1]},${match[2]},${match[3]},${a})`;\r\n  }\r\n};\r\nconst createGrid = async (num = 4) => {\r\n  while (gridContainer.firstChild) {\r\n    gridContainer.removeChild(gridContainer.firstChild);\r\n  }\r\n  let i = 0;\r\n  while (i < num) {\r\n    const gridRow = document.createElement('div');\r\n    gridRow.classList.add('grid-row');\r\n    for (let j = 0; j < num; j++) {\r\n      const div = document.createElement('div');\r\n      div.classList.add('cell');\r\n      gridRow.append(div);\r\n      gridContainer.append(gridRow);\r\n      await wait();\r\n    }\r\n    gridContainer.append(gridRow);\r\n    i++;\r\n  }\r\n  const cells = document.querySelectorAll('.cell');\r\n  cells.forEach((cell) => {\r\n    cell.addEventListener('pointerover', changeColor);\r\n  });\r\n};\r\n\r\n// Event Listeners\r\n\r\nsquareForm.addEventListener('submit', (e) => {\r\n  e.preventDefault();\r\n  const numberOfSquares = parseInt(e.target[0].value);\r\n  toggleClassOn();\r\n  createGrid(numberOfSquares);\r\n});\r\nclearButton.addEventListener('pointerdown', clearGrid);\r\nnumberInput.addEventListener('keydown', validateEntry);\r\nnumberInput.addEventListener('change', checkNumberRange);\r\npopup.addEventListener('pointerdown', exitPopup);\r\npopup.addEventListener('keydown', exitPopup);\r\n\r\n// Helper Functions\r\nconst wait = (amount = 0) =>\r\n  new Promise((resolve) => setTimeout(resolve, amount));\r\n\r\n// Start App\r\ncreateGrid();\r\n"],"names":["$f7cc2df98f0dd786ece54ee206a6d458$var$gridContainer","document","querySelector","$f7cc2df98f0dd786ece54ee206a6d458$var$clearButton","$f7cc2df98f0dd786ece54ee206a6d458$var$formContainer","$f7cc2df98f0dd786ece54ee206a6d458$var$squareForm","$f7cc2df98f0dd786ece54ee206a6d458$var$popup","$f7cc2df98f0dd786ece54ee206a6d458$var$numberInput","$f7cc2df98f0dd786ece54ee206a6d458$var$toggleClassOff","classList","remove","setTimeout","focus","$f7cc2df98f0dd786ece54ee206a6d458$var$toggleClassOn","add","$f7cc2df98f0dd786ece54ee206a6d458$var$exitPopup","e","target","key","$f7cc2df98f0dd786ece54ee206a6d458$var$changeColor","style","backgroundColor","current_color","getComputedStyle","getPropertyValue","match","exec","a","parseFloat","replace","randomRed","Math","round","random","randomGreen","randomBlue","$f7cc2df98f0dd786ece54ee206a6d458$var$createGrid","async","num","firstChild","removeChild","i","gridRow","createElement","j","div","append","$f7cc2df98f0dd786ece54ee206a6d458$var$wait","querySelectorAll","forEach","cell","addEventListener","preventDefault","numberOfSquares","parseInt","value","includes","amount","Promise","resolve"],"version":3,"file":"index.baad1718.js.map"}